/**
* This file is autogenerated by nRFgo Studio 1.17.1.3252
*/

#ifndef SETUP_MESSAGES_H__
#define SETUP_MESSAGES_H__

#include "hal_platform.h"
#include "aci.h"


#define SETUP_ID 0
#define SETUP_FORMAT 2 /** nRF8001 Cx */
#define ACI_DYNAMIC_DATA_SIZE 158

/* Service: Nordic UART over BTLE - Characteristic: UART RX - Pipe: RX */
#define PIPE_NORDIC_UART_OVER_BTLE_UART_RX_RX          1
#define PIPE_NORDIC_UART_OVER_BTLE_UART_RX_RX_MAX_SIZE 20

/* Service: Nordic UART over BTLE - Characteristic: UART TX - Pipe: TX */
#define PIPE_NORDIC_UART_OVER_BTLE_UART_TX_TX          2
#define PIPE_NORDIC_UART_OVER_BTLE_UART_TX_TX_MAX_SIZE 20


#define NUMBER_OF_PIPES 2

#define SERVICES_PIPE_TYPE_MAPPING_CONTENT {\
  {ACI_STORE_LOCAL, ACI_RX},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
}

#define GAP_PPCP_MAX_CONN_INT 0xffff /**< Maximum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific value requested */
#define GAP_PPCP_MIN_CONN_INT  0xffff /**< Minimum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific value requested */
#define GAP_PPCP_SLAVE_LATENCY 0
#define GAP_PPCP_CONN_TIMEOUT 0xffff /** Connection Supervision timeout multiplier as a multiple of 10msec, 0xFFFF means no specific value requested */

/** @brief send a new value for PIPE_NORDIC_UART_OVER_BTLE_UART_TX_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 20
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_NORDIC_UART_OVER_BTLE_UART_TX_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_nordic_uart_over_btle_uart_tx(void *src, int size, bool is_freshest_sample);

/** @brief function to trig pending transaction on pipes
 *  @details This function check for each pipe if it has a pending transaction (send/rx_request/ack)
 *   and if so executes this transaction.
 *   This function should be called in the APP_RUN state of the process function of the application.
 */
void services_update_pipes(void);

#define NB_SETUP_MESSAGES 21
#define SETUP_MESSAGES_CONTENT {\
    {0x00,\
        {\
            0x07,0x06,0x00,0x00,0x02,0x02,0x42,0x07,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x02,0x01,0x01,0x00,0x0d,0x07,0x00,0x04,\
            0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1e,0x06,0x10,0x1c,0x01,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x24,0x03,0x11,0x01,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x00,0x04,0x04,0x02,0x02,0x00,0x01,0x28,0x00,0x01,0x00,0x18,0x04,0x04,0x05,0x05,0x00,\
            0x02,0x28,0x03,0x01,0x02,0x03,0x00,0x00,0x2a,0x04,0x04,0x14,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x1c,0x04,0x00,0x03,0x2a,0x00,0x01,0x50,0x49,0x43,0x32,0x69,0x63,0x73,0x65,0x6d,0x69,\
            0x2e,0x63,0x6f,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x38,0x05,0x05,0x00,0x04,0x28,0x03,0x01,0x02,0x05,0x00,0x01,0x2a,0x06,0x04,0x03,0x02,\
            0x00,0x05,0x2a,0x01,0x01,0x00,0x00,0x04,0x04,0x05,0x05,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x54,0x06,0x28,0x03,0x01,0x02,0x07,0x00,0x04,0x2a,0x06,0x04,0x09,0x08,0x00,0x07,0x2a,\
            0x04,0x01,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x04,0x04,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x70,0x02,0x02,0x00,0x08,0x28,0x00,0x01,0x01,0x18,0x04,0x04,0x02,0x02,0x00,0x09,0x28,\
            0x00,0x01,0x0a,0x18,0x04,0x04,0x05,0x05,0x00,0x0a,0x28,0x03,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x8c,0x01,0x02,0x0b,0x00,0x27,0x2a,0x06,0x04,0x03,0x02,0x00,0x0b,0x2a,0x27,0x01,0x42,\
            0x78,0x06,0x04,0x08,0x07,0x00,0x0c,0x29,0x04,0x01,0x19,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xa8,0x00,0x00,0x01,0x00,0x00,0x04,0x04,0x10,0x10,0x00,0x0d,0x28,0x00,0x01,0x9e,0xca,\
            0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,0xa3,0xb5,0x01,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xc4,0x40,0x6e,0x04,0x04,0x13,0x13,0x00,0x0e,0x28,0x03,0x01,0x04,0x0f,0x00,0x9e,0xca,\
            0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,0xa3,0xb5,0x02,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xe0,0x40,0x6e,0x44,0x10,0x14,0x00,0x00,0x0f,0x00,0x02,0x02,0x00,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xfc,0x00,0x00,0x00,0x04,0x04,0x13,0x13,0x00,0x10,0x28,0x03,0x01,0x10,0x11,0x00,0x9e,\
            0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,0xa3,0xb5,0x03,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x18,0x00,0x40,0x6e,0x14,0x00,0x14,0x00,0x00,0x11,0x00,0x03,0x02,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x34,0x00,0x00,0x00,0x00,0x46,0x14,0x03,0x02,0x00,0x12,0x29,0x02,0x01,0x00,0x00,0x04,\
            0x04,0x13,0x13,0x00,0x13,0x28,0x03,0x01,0x02,0x14,0x00,0x9e,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x50,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,0xa3,0xb5,0x05,0x00,0x40,0x6e,0x06,\
            0x04,0x07,0x06,0x00,0x14,0x00,0x05,0x02,0xff,0xff,0xff,0xff,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x6c,0xff,0xff,0x04,0x04,0x13,0x13,0x00,0x15,0x28,0x03,0x01,0x00,0x16,0x00,0x9e,0xca,\
            0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,0xa3,0xb5,0x04,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x18,0x06,0x21,0x88,0x40,0x6e,0x04,0x00,0x09,0x00,0x00,0x16,0x00,0x04,0x02,0x00,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x17,0x06,0x40,0x00,0x00,0x02,0x02,0x00,0x08,0x04,0x00,0x0f,0x00,0x00,0x00,0x03,0x02,0x00,0x02,0x04,\
            0x00,0x11,0x00,0x12,\
        },\
    },\
    {0x00,\
        {\
            0x13,0x06,0x50,0x00,0x9e,0xca,0xdc,0x24,0x0e,0xe5,0xa9,0xe0,0x93,0xf3,0xa3,0xb5,0x00,0x00,0x40,0x6e,\
        },\
    },\
    {0x00,\
        {\
            0x06,0x06,0xf0,0x00,0x02,0x2e,0xf9,\
        },\
    },\
}

#endif
